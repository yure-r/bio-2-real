!function(){class e extends THREE.Loader{constructor(e){if(super(e),"undefined"==typeof chevrotain)throw Error("THREE.VRMLLoader: External library chevrotain.min.js required.")}load(e,t,n,r){const o=this,a=""===o.path?THREE.LoaderUtils.extractUrlBase(e):o.path,s=new THREE.FileLoader(o.manager);s.setPath(o.path),s.setRequestHeader(o.requestHeader),s.setWithCredentials(o.withCredentials),s.load(e,(function(n){try{t(o.parse(n,a))}catch(t){r?r(t):console.error(t),o.manager.itemError(e)}}),n,r)}parse(e,n){const s={};function i(e){e.DEF&&(s[e.DEF]=e);const t=e.fields;for(let e=0,n=t.length;e<n;e++){const n=t[e];if("node"===n.type){const e=n.values;for(let t=0,n=e.length;t<n;t++)i(e[t])}}}function l(e){return e.USE?function(e){const t=l(s[e]);return t.isObject3D||t.isMaterial?t.clone():t}(e.USE):(void 0!==e.build||(e.build=function(e){const t=e.name;let n;switch(t){case"Group":case"Transform":case"Collision":n=function(e){const t=new THREE.Group,n=e.fields;for(let e=0,r=n.length;e<r;e++){const r=n[e],o=r.name,a=r.values;switch(o){case"bboxCenter":case"bboxSize":case"center":case"collide":case"scaleOrientation":case"proxy":break;case"children":f(a,t);break;case"rotation":const e=new THREE.Vector3(a[0],a[1],a[2]),n=a[3];t.quaternion.setFromAxisAngle(e,n);break;case"scale":t.scale.set(a[0],a[1],a[2]);break;case"translation":t.position.set(a[0],a[1],a[2]);break;default:console.warn("THREE.VRMLLoader: Unknown field:",o)}}return t}(e);break;case"Background":n=function(e){const t=new THREE.Group;let n,r,o,a;const s=e.fields;for(let e=0,t=s.length;e<t;e++){const t=s[e],i=t.name,l=t.values;switch(i){case"groundAngle":n=l;break;case"groundColor":r=l;break;case"backUrl":case"bottomUrl":case"frontUrl":case"leftUrl":case"rightUrl":case"topUrl":break;case"skyAngle":o=l;break;case"skyColor":a=l;break;default:console.warn("THREE.VRMLLoader: Unknown field:",i)}}const i=1e4;if(a){const e=new THREE.SphereGeometry(i,32,16),n=new THREE.MeshBasicMaterial({fog:!1,side:THREE.BackSide,depthWrite:!1,depthTest:!1});a.length>3?(M(e,i,o,C(a),!0),n.vertexColors=!0):n.color.setRGB(a[0],a[1],a[2]);const r=new THREE.Mesh(e,n);t.add(r)}if(r&&r.length>0){const e=new THREE.SphereGeometry(i,32,16,0,2*Math.PI,.5*Math.PI,1.5*Math.PI),o=new THREE.MeshBasicMaterial({fog:!1,side:THREE.BackSide,vertexColors:!0,depthWrite:!1,depthTest:!1});M(e,i,n,C(r),!1);const a=new THREE.Mesh(e,o);t.add(a)}return t.renderOrder=-1/0,t}(e);break;case"Shape":n=function(e){const t=e.fields;let n,r,o=new THREE.MeshBasicMaterial({color:0});for(let e=0,r=t.length;e<r;e++){const r=t[e],a=r.name,s=r.values;switch(a){case"appearance":null!==s[0]&&(o=l(s[0]));break;case"geometry":null!==s[0]&&(n=l(s[0]));break;default:console.warn("THREE.VRMLLoader: Unknown field:",a)}}if(n&&n.attributes.position){const e=n._type;if("points"===e){const e=new THREE.PointsMaterial({color:16777215});void 0!==n.attributes.color?e.vertexColors=!0:o.isMeshPhongMaterial&&e.color.copy(o.emissive),r=new THREE.Points(n,e)}else if("line"===e){const e=new THREE.LineBasicMaterial({color:16777215});void 0!==n.attributes.color?e.vertexColors=!0:o.isMeshPhongMaterial&&e.color.copy(o.emissive),r=new THREE.LineSegments(n,e)}else void 0!==n._solid&&(o.side=n._solid?THREE.FrontSide:THREE.DoubleSide),void 0!==n.attributes.color&&(o.vertexColors=!0),r=new THREE.Mesh(n,o)}else r=new THREE.Object3D,r.visible=!1;return r}(e);break;case"Appearance":n=function(e){let t,n=new THREE.MeshPhongMaterial;const r=e.fields;for(let e=0,o=r.length;e<o;e++){const o=r[e],a=o.name,s=o.values;switch(a){case"material":if(null!==s[0]){const e=l(s[0]);e.diffuseColor&&n.color.copy(e.diffuseColor),e.emissiveColor&&n.emissive.copy(e.emissiveColor),e.shininess&&(n.shininess=e.shininess),e.specularColor&&n.specular.copy(e.specularColor),e.transparency&&(n.opacity=1-e.transparency),e.transparency>0&&(n.transparent=!0)}else n=new THREE.MeshBasicMaterial({color:0});break;case"texture":const e=s[0];null!==e&&("ImageTexture"!==e.name&&"PixelTexture"!==e.name||(n.map=l(e)));break;case"textureTransform":null!==s[0]&&(t=l(s[0]));break;default:console.warn("THREE.VRMLLoader: Unknown field:",a)}}if(n.map){if(n.map.__type){switch(n.map.__type){case a.INTENSITY_ALPHA:n.opacity=1;break;case a.RGB:n.color.set(16777215);break;case a.RGBA:n.color.set(16777215),n.opacity=1}delete n.map.__type}t&&(n.map.center.copy(t.center),n.map.rotation=t.rotation,n.map.repeat.copy(t.scale),n.map.offset.copy(t.translation))}return n}(e);break;case"Material":n=function(e){const t={},n=e.fields;for(let e=0,r=n.length;e<r;e++){const r=n[e],o=r.name,a=r.values;switch(o){case"ambientIntensity":break;case"diffuseColor":t.diffuseColor=new THREE.Color(a[0],a[1],a[2]);break;case"emissiveColor":case"specularColor":t.emissiveColor=new THREE.Color(a[0],a[1],a[2]);break;case"shininess":t.shininess=a[0];break;case"transparency":t.transparency=a[0];break;default:console.warn("THREE.VRMLLoader: Unknown field:",o)}}return t}(e);break;case"ImageTexture":n=function(e){let t,n=THREE.RepeatWrapping,r=THREE.RepeatWrapping;const o=e.fields;for(let e=0,a=o.length;e<a;e++){const a=o[e],s=a.name,i=a.values;switch(s){case"url":const e=i[0];e&&(t=V.load(e));break;case"repeatS":!1===i[0]&&(n=THREE.ClampToEdgeWrapping);break;case"repeatT":!1===i[0]&&(r=THREE.ClampToEdgeWrapping);break;default:console.warn("THREE.VRMLLoader: Unknown field:",s)}}return t&&(t.wrapS=n,t.wrapT=r),t}(e);break;case"PixelTexture":n=function(e){let t,n=THREE.RepeatWrapping,r=THREE.RepeatWrapping;const o=e.fields;for(let e=0,a=o.length;e<a;e++){const a=o[e],s=a.name,i=a.values;switch(s){case"image":const e=i[0],o=i[1],a=u(i[2]),l=new Uint8Array(4*e*o),f={r:0,g:0,b:0,a:0};for(let e=3,t=0,n=i.length;e<n;e++,t++){c(i[e],a,f);const n=4*t;l[n+0]=f.r,l[n+1]=f.g,l[n+2]=f.b,l[n+3]=f.a}t=new THREE.DataTexture(l,e,o),t.needsUpdate=!0,t.__type=a;break;case"repeatS":!1===i[0]&&(n=THREE.ClampToEdgeWrapping);break;case"repeatT":!1===i[0]&&(r=THREE.ClampToEdgeWrapping);break;default:console.warn("THREE.VRMLLoader: Unknown field:",s)}}return t&&(t.wrapS=n,t.wrapT=r),t}(e);break;case"TextureTransform":n=function(e){const t={center:new THREE.Vector2,rotation:new THREE.Vector2,scale:new THREE.Vector2,translation:new THREE.Vector2},n=e.fields;for(let e=0,r=n.length;e<r;e++){const r=n[e],o=r.name,a=r.values;switch(o){case"center":t.center.set(a[0],a[1]);break;case"rotation":t.rotation=a[0];break;case"scale":t.scale.set(a[0],a[1]);break;case"translation":t.translation.set(a[0],a[1]);break;default:console.warn("THREE.VRMLLoader: Unknown field:",o)}}return t}(e);break;case"IndexedFaceSet":n=function(e){let t,n,r,o,a,s,i,c,u=!0,f=!0,h=0,b=!0,T=!0;const R=e.fields;for(let e=0,E=R.length;e<E;e++){const E=R[e],d=E.name,p=E.values;switch(d){case"color":const e=p[0];null!==e&&(t=l(e));break;case"coord":const E=p[0];null!==E&&(n=l(E));break;case"normal":const R=p[0];null!==R&&(r=l(R));break;case"texCoord":const x=p[0];null!==x&&(o=l(x));break;case"ccw":u=p[0];break;case"colorIndex":a=p;break;case"colorPerVertex":b=p[0];break;case"convex":break;case"coordIndex":s=p;break;case"creaseAngle":h=p[0];break;case"normalIndex":i=p;break;case"normalPerVertex":T=p[0];break;case"solid":f=p[0];break;case"texCoordIndex":c=p;break;default:console.warn("THREE.VRMLLoader: Unknown field:",d)}}if(void 0===s)return console.warn("THREE.VRMLLoader: Missing coordIndex."),new THREE.BufferGeometry;const x=E(s,u);let m,g,w;t&&(m=!0===b?a&&a.length>0?L(x,E(a,u),t,3):H(x,new THREE.Float32BufferAttribute(t,3)):a&&a.length>0?k(x,d(p(t,a),s)):k(x,d(t,s))),g=r?!0===T?i&&i.length>0?L(x,E(i,u),r,3):H(x,new THREE.Float32BufferAttribute(r,3)):i&&i.length>0?k(x,d(p(r,i),s)):k(x,d(r,s)):U(x,n,h),o&&(w=c&&c.length>0?L(x,E(c,u),o,2):H(x,new THREE.Float32BufferAttribute(o,2)));const y=new THREE.BufferGeometry,S=H(x,new THREE.Float32BufferAttribute(n,3));return y.setAttribute("position",S),y.setAttribute("normal",g),m&&y.setAttribute("color",m),w&&y.setAttribute("uv",w),y._solid=f,y._type="mesh",y}(e);break;case"IndexedLineSet":n=function(e){let t,n,r,o,a=!0;const s=e.fields;for(let e=0,i=s.length;e<i;e++){const i=s[e],c=i.name,u=i.values;switch(c){case"color":const e=u[0];null!==e&&(t=l(e));break;case"coord":const s=u[0];null!==s&&(n=l(s));break;case"colorIndex":r=u;break;case"colorPerVertex":a=u[0];break;case"coordIndex":o=u;break;default:console.warn("THREE.VRMLLoader: Unknown field:",c)}}let i;const c=h(o);t&&(i=!0===a?r.length>0?L(c,h(r),t,3):H(c,new THREE.Float32BufferAttribute(t,3)):r.length>0?y(c,b(p(t,r),o)):y(c,b(t,o)));const u=new THREE.BufferGeometry,f=H(c,new THREE.Float32BufferAttribute(n,3));return u.setAttribute("position",f),i&&u.setAttribute("color",i),u._type="line",u}(e);break;case"PointSet":n=function(e){let t,n;const r=e.fields;for(let e=0,o=r.length;e<o;e++){const o=r[e],a=o.name,s=o.values;switch(a){case"color":const e=s[0];null!==e&&(t=l(e));break;case"coord":const r=s[0];null!==r&&(n=l(r));break;default:console.warn("THREE.VRMLLoader: Unknown field:",a)}}const o=new THREE.BufferGeometry;return o.setAttribute("position",new THREE.Float32BufferAttribute(n,3)),t&&o.setAttribute("color",new THREE.Float32BufferAttribute(t,3)),o._type="points",o}(e);break;case"Box":n=function(e){const t=new THREE.Vector3(2,2,2),n=e.fields;for(let e=0,r=n.length;e<r;e++){const r=n[e],o=r.name,a=r.values;"size"===o?(t.x=a[0],t.y=a[1],t.z=a[2]):console.warn("THREE.VRMLLoader: Unknown field:",o)}return new THREE.BoxGeometry(t.x,t.y,t.z)}(e);break;case"Cone":n=function(e){let t=1,n=2,r=!1;const o=e.fields;for(let e=0,a=o.length;e<a;e++){const a=o[e],s=a.name,i=a.values;switch(s){case"bottom":r=!i[0];break;case"bottomRadius":t=i[0];break;case"height":n=i[0];break;case"side":break;default:console.warn("THREE.VRMLLoader: Unknown field:",s)}}return new THREE.ConeGeometry(t,n,16,1,r)}(e);break;case"Cylinder":n=function(e){let t=1,n=2;const r=e.fields;for(let e=0,o=r.length;e<o;e++){const o=r[e],a=o.name,s=o.values;switch(a){case"bottom":case"side":case"top":break;case"radius":t=s[0];break;case"height":n=s[0];break;default:console.warn("THREE.VRMLLoader: Unknown field:",a)}}return new THREE.CylinderGeometry(t,t,n,16,1)}(e);break;case"Sphere":n=function(e){let t=1;const n=e.fields;for(let e=0,r=n.length;e<r;e++){const r=n[e],o=r.name,a=r.values;"radius"===o?t=a[0]:console.warn("THREE.VRMLLoader: Unknown field:",o)}return new THREE.SphereGeometry(t,16,16)}(e);break;case"ElevationGrid":n=function(e){let t,n,r,o,a=!0,s=!0,i=!0,c=!0,u=0,f=2,E=2,d=1,p=1;const h=e.fields;for(let e=0,b=h.length;e<b;e++){const b=h[e],T=b.name,R=b.values;switch(T){case"color":const e=R[0];null!==e&&(t=l(e));break;case"normal":const h=R[0];null!==h&&(n=l(h));break;case"texCoord":const b=R[0];null!==b&&(r=l(b));break;case"height":o=R;break;case"ccw":c=R[0];break;case"colorPerVertex":a=R[0];break;case"creaseAngle":u=R[0];break;case"normalPerVertex":s=R[0];break;case"solid":i=R[0];break;case"xDimension":f=R[0];break;case"xSpacing":d=R[0];break;case"zDimension":E=R[0];break;case"zSpacing":p=R[0];break;default:console.warn("THREE.VRMLLoader: Unknown field:",T)}}const b=[],T=[],R=[],x=[];for(let e=0;e<E;e++)for(let i=0;i<f;i++){const l=e*f+i,c=d*e,u=o[l],h=p*i;if(b.push(c,u,h),t&&!0===a){const e=t[3*l+0],n=t[3*l+1],r=t[3*l+2];R.push(e,n,r)}if(n&&!0===s){const e=n[3*l+0],t=n[3*l+1],r=n[3*l+2];T.push(e,t,r)}if(r){const e=r[2*l+0],t=r[2*l+1];x.push(e,t)}else x.push(e/(f-1),i/(E-1))}const m=[];for(let e=0;e<f-1;e++)for(let t=0;t<E-1;t++){const n=e+t*f,r=e+(t+1)*f,o=e+1+(t+1)*f,a=e+1+t*f;!0===c?(m.push(n,o,r),m.push(o,n,a)):(m.push(n,r,o),m.push(o,a,n))}const g=H(m,new THREE.Float32BufferAttribute(b,3)),w=H(m,new THREE.Float32BufferAttribute(x,2));let L,k;if(t)if(!1===a){for(let e=0;e<f-1;e++)for(let n=0;n<E-1;n++){const r=e+n*(f-1),o=t[3*r+0],a=t[3*r+1],s=t[3*r+2];R.push(o,a,s),R.push(o,a,s),R.push(o,a,s),R.push(o,a,s),R.push(o,a,s),R.push(o,a,s)}L=new THREE.Float32BufferAttribute(R,3)}else L=H(m,new THREE.Float32BufferAttribute(R,3));if(n)if(!1===s){for(let e=0;e<f-1;e++)for(let t=0;t<E-1;t++){const r=e+t*(f-1),o=n[3*r+0],a=n[3*r+1],s=n[3*r+2];T.push(o,a,s),T.push(o,a,s),T.push(o,a,s),T.push(o,a,s),T.push(o,a,s),T.push(o,a,s)}k=new THREE.Float32BufferAttribute(T,3)}else k=H(m,new THREE.Float32BufferAttribute(T,3));else k=U(m,b,u);const y=new THREE.BufferGeometry;return y.setAttribute("position",g),y.setAttribute("normal",k),y.setAttribute("uv",w),L&&y.setAttribute("color",L),y._solid=i,y._type="mesh",y}(e);break;case"Extrusion":n=function(e){let t,n,r=[1,1,1,-1,-1,-1,-1,1,1,1],o=[0,0,0,0,1,0],a=!0,s=!0,i=0,l=!0,c=!0;const u=e.fields;for(let e=0,f=u.length;e<f;e++){const f=u[e],E=f.name,d=f.values;switch(E){case"beginCap":a=d[0];break;case"ccw":s=d[0];break;case"convex":break;case"creaseAngle":i=d[0];break;case"crossSection":r=d;break;case"endCap":l=d[0];break;case"orientation":n=d;break;case"scale":t=d;break;case"solid":c=d[0];break;case"spine":o=d;break;default:console.warn("THREE.VRMLLoader: Unknown field:",E)}}const f=r[0]===r[r.length-2]&&r[1]===r[r.length-1],E=[],d=new THREE.Vector3,p=new THREE.Vector3,h=new THREE.Vector3,b=new THREE.Vector3,T=new THREE.Quaternion;for(let e=0,a=0,s=0,i=o.length;e<i;e+=3,a+=2,s+=4){d.fromArray(o,e),p.x=t?t[a+0]:1,p.y=1,p.z=t?t[a+1]:1,h.x=n?n[s+0]:0,h.y=n?n[s+1]:0,h.z=n?n[s+2]:1;const i=n?n[s+3]:0;for(let e=0,t=r.length;e<t;e+=2)b.x=r[e+0],b.y=0,b.z=r[e+1],b.multiply(p),T.setFromAxisAngle(h,i),b.applyQuaternion(T),b.add(d),E.push(b.x,b.y,b.z)}const R=[],x=o.length/3,m=r.length/2;for(let e=0;e<x-1;e++)for(let t=0;t<m-1;t++){const n=t+e*m;let r=t+1+e*m;const o=t+(e+1)*m;let a=t+1+(e+1)*m;t===m-2&&!0===f&&(r=e*m,a=(e+1)*m),!0===s?(R.push(n,r,o),R.push(o,r,a)):(R.push(n,o,r),R.push(o,a,r))}if(!0===a||!0===l){const e=[];for(let t=0,n=r.length;t<n;t+=2)e.push(new THREE.Vector2(r[t],r[t+1]));const t=THREE.ShapeUtils.triangulateShape(e,[]),n=[];for(let e=0,r=t.length;e<r;e++){const r=t[e];n.push(r[0],r[1],r[2])}if(!0===a)for(let e=0,t=n.length;e<t;e+=3)!0===s?R.push(n[e+0],n[e+1],n[e+2]):R.push(n[e+0],n[e+2],n[e+1]);if(!0===l){const e=m*(x-1);for(let t=0,r=n.length;t<r;t+=3)!0===s?R.push(e+n[t+0],e+n[t+2],e+n[t+1]):R.push(e+n[t+0],e+n[t+1],e+n[t+2])}}const g=H(R,new THREE.Float32BufferAttribute(E,3)),w=U(R,E,i),L=new THREE.BufferGeometry;return L.setAttribute("position",g),L.setAttribute("normal",w),L._solid=c,L._type="mesh",L}(e);break;case"Color":case"Coordinate":case"Normal":case"TextureCoordinate":n=function(e){return e.fields[0].values}(e);break;case"WorldInfo":n=function(e){const t={},n=e.fields;for(let e=0,r=n.length;e<r;e++){const r=n[e],o=r.name,a=r.values;switch(o){case"title":t.title=a[0];break;case"info":t.info=a;break;default:console.warn("THREE.VRMLLoader: Unknown field:",o)}}return t}(e);break;case"Anchor":case"Billboard":case"Inline":case"LOD":case"Switch":case"AudioClip":case"DirectionalLight":case"PointLight":case"Script":case"Sound":case"SpotLight":case"CylinderSensor":case"PlaneSensor":case"ProximitySensor":case"SphereSensor":case"TimeSensor":case"TouchSensor":case"VisibilitySensor":case"Text":case"FontStyle":case"MovieTexture":case"ColorInterpolator":case"CoordinateInterpolator":case"NormalInterpolator":case"OrientationInterpolator":case"PositionInterpolator":case"ScalarInterpolator":case"Fog":case"NavigationInfo":case"Viewpoint":break;default:console.warn("THREE.VRMLLoader: Unknown node:",t)}return void 0!==n&&void 0!==e.DEF&&!0===n.hasOwnProperty("name")&&(n.name=e.DEF),n}(e)),e.build)}function c(e,t,n){let r;switch(t){case a.INTENSITY:r=parseInt(e),n.r=r,n.g=r,n.b=r,n.a=1;break;case a.INTENSITY_ALPHA:r=parseInt("0x"+e.substring(2,4)),n.r=r,n.g=r,n.b=r,n.a=parseInt("0x"+e.substring(4,6));break;case a.RGB:n.r=parseInt("0x"+e.substring(2,4)),n.g=parseInt("0x"+e.substring(4,6)),n.b=parseInt("0x"+e.substring(6,8)),n.a=1;break;case a.RGBA:n.r=parseInt("0x"+e.substring(2,4)),n.g=parseInt("0x"+e.substring(4,6)),n.b=parseInt("0x"+e.substring(6,8)),n.a=parseInt("0x"+e.substring(8,10))}}function u(e){let t;switch(e){case 1:t=a.INTENSITY;break;case 2:t=a.INTENSITY_ALPHA;break;case 3:t=a.RGB;break;case 4:t=a.RGBA}return t}function f(e,t){for(let n=0,r=e.length;n<r;n++){const r=l(e[n]);r instanceof THREE.Object3D&&t.add(r)}}function E(e,t){const n=[];let r=0;for(let o=0,a=e.length;o<a;o++){const s=e[r],i=e[o+(t?1:2)],l=e[o+(t?2:1)];n.push(s,i,l),(-1===e[o+3]||o+3>=a)&&(o+=3,r=o+1)}return n}function d(e,t){const n=[];let r=0;for(let o=0,a=t.length;o<a;o++){const s=3*r,i=e[s],l=e[s+1],c=e[s+2];n.push(i,l,c),(-1===t[o+3]||o+3>=a)&&(o+=3,r++)}return n}function p(e,t){const n=[];for(let r=0,o=t.length;r<o;r++){const o=3*t[r],a=e[o],s=e[o+1],i=e[o+2];n.push(a,s,i)}return n}function h(e){const t=[];for(let n=0,r=e.length;n<r;n++){const o=e[n],a=e[n+1];t.push(o,a),(-1===e[n+2]||n+2>=r)&&(n+=2)}return t}function b(e,t){const n=[];let r=0;for(let o=0,a=t.length;o<a;o++){const s=3*r,i=e[s],l=e[s+1],c=e[s+2];n.push(i,l,c),(-1===t[o+2]||o+2>=a)&&(o+=2,r++)}return n}const T=new THREE.Vector3,R=new THREE.Vector3,x=new THREE.Vector3,m=new THREE.Vector2,g=new THREE.Vector2,w=new THREE.Vector2;function L(e,t,n,r){const o=[];for(let a=0,s=e.length;a<s;a+=3){const e=t[a],s=t[a+1],i=t[a+2];2===r?(m.fromArray(n,e*r),g.fromArray(n,s*r),w.fromArray(n,i*r),o.push(m.x,m.y),o.push(g.x,g.y),o.push(w.x,w.y)):(T.fromArray(n,e*r),R.fromArray(n,s*r),x.fromArray(n,i*r),o.push(T.x,T.y,T.z),o.push(R.x,R.y,R.z),o.push(x.x,x.y,x.z))}return new THREE.Float32BufferAttribute(o,r)}function k(e,t){const n=[];for(let r=0,o=0,a=e.length;r<a;r+=3,o++)T.fromArray(t,3*o),n.push(T.x,T.y,T.z),n.push(T.x,T.y,T.z),n.push(T.x,T.y,T.z);return new THREE.Float32BufferAttribute(n,3)}function y(e,t){const n=[];for(let r=0,o=0,a=e.length;r<a;r+=2,o++)T.fromArray(t,3*o),n.push(T.x,T.y,T.z),n.push(T.x,T.y,T.z);return new THREE.Float32BufferAttribute(n,3)}function H(e,t){const n=t.array,r=t.itemSize,o=new n.constructor(e.length*r);let a=0,s=0;for(let t=0,i=e.length;t<i;t++){a=e[t]*r;for(let e=0;e<r;e++)o[s++]=n[a++]}return new THREE.Float32BufferAttribute(o,r)}const S=new THREE.Vector3,A=new THREE.Vector3;function U(e,t,n){const r=[],a={};for(let n=0,s=e.length;n<s;n+=3){const s=e[n],i=e[n+1],l=e[n+2],c=new o(s,i,l);T.fromArray(t,3*s),R.fromArray(t,3*i),x.fromArray(t,3*l),A.subVectors(x,R),S.subVectors(T,R),A.cross(S),A.normalize(),c.normal.copy(A),void 0===a[s]&&(a[s]=[]),void 0===a[i]&&(a[i]=[]),void 0===a[l]&&(a[l]=[]),a[s].push(c.normal),a[i].push(c.normal),a[l].push(c.normal),r.push(c)}const s=[];for(let e=0,o=r.length;e<o;e++){const o=r[e],i=v(a[o.a],o.normal,n),l=v(a[o.b],o.normal,n),c=v(a[o.c],o.normal,n);T.fromArray(t,3*o.a),R.fromArray(t,3*o.b),x.fromArray(t,3*o.c),s.push(i.x,i.y,i.z),s.push(l.x,l.y,l.z),s.push(c.x,c.y,c.z)}return new THREE.Float32BufferAttribute(s,3)}function v(e,t,n){const r=new THREE.Vector3;if(0===n)r.copy(t);else for(let o=0,a=e.length;o<a;o++)e[o].angleTo(t)<n&&r.add(e[o]);return r.normalize()}function C(e){const t=[];for(let n=0,r=e.length;n<r;n+=3)t.push(new THREE.Color(e[n],e[n+1],e[n+2]));return t}function M(e,t,n,r,o){const a=[],s=!0===o?0:Math.PI;for(let e=0,i=r.length;e<i;e++){let r=0===e?0:n[e-1];r=!0===o?r:s-r;const i=new THREE.Vector3;i.setFromSphericalCoords(t,r,0),a.push(i)}const i=e.index,l=e.attributes.position,c=new THREE.BufferAttribute(new Float32Array(3*e.attributes.position.count),3),u=new THREE.Vector3,f=new THREE.Color;for(let e=0;e<i.count;e++){const t=i.getX(e);let n,s;u.fromBufferAttribute(l,t);let E=1;for(let e=1;e<a.length;e++){n=e-1,s=e;const t=a[n],r=a[s];if(!0===o){if(u.y<=t.y&&u.y>r.y){E=Math.abs(t.y-u.y)/Math.abs(t.y-r.y);break}}else if(u.y>=t.y&&u.y<r.y){E=Math.abs(t.y-u.y)/Math.abs(t.y-r.y);break}}const d=r[n],p=r[s];f.copy(d).lerp(p,E),c.setXYZ(t,f.r,f.g,f.b)}e.setAttribute("color",c)}const V=new THREE.TextureLoader(this.manager);if(V.setPath(this.resourcePath||n).setCrossOrigin(this.crossOrigin),-1===e.indexOf("#VRML V2.0"))throw Error("THREE.VRMLLexer: Version of VRML asset not supported.");const I=function(e){const n=function(){const e=chevrotain.createToken,t=e({name:"RouteIdentifier",pattern:/[^\x30-\x39\0-\x20\x22\x27\x23\x2b\x2c\x2d\x2e\x5b\x5d\x5c\x7b\x7d][^\0-\x20\x22\x27\x23\x2b\x2c\x2d\x2e\x5b\x5d\x5c\x7b\x7d]*[\.][^\x30-\x39\0-\x20\x22\x27\x23\x2b\x2c\x2d\x2e\x5b\x5d\x5c\x7b\x7d][^\0-\x20\x22\x27\x23\x2b\x2c\x2d\x2e\x5b\x5d\x5c\x7b\x7d]*/}),n=e({name:"Identifier",pattern:/[^\x30-\x39\0-\x20\x22\x27\x23\x2b\x2c\x2d\x2e\x5b\x5d\x5c\x7b\x7d][^\0-\x20\x22\x27\x23\x2b\x2c\x2d\x2e\x5b\x5d\x5c\x7b\x7d]*/,longer_alt:t}),r=e({name:"Version",pattern:/#VRML.*/,longer_alt:n}),o=e({name:"NodeName",pattern:new RegExp(["Anchor","Billboard","Collision","Group","Transform","Inline","LOD","Switch","AudioClip","DirectionalLight","PointLight","Script","Shape","Sound","SpotLight","WorldInfo","CylinderSensor","PlaneSensor","ProximitySensor","SphereSensor","TimeSensor","TouchSensor","VisibilitySensor","Box","Cone","Cylinder","ElevationGrid","Extrusion","IndexedFaceSet","IndexedLineSet","PointSet","Sphere","Color","Coordinate","Normal","TextureCoordinate","Appearance","FontStyle","ImageTexture","Material","MovieTexture","PixelTexture","TextureTransform","ColorInterpolator","CoordinateInterpolator","NormalInterpolator","OrientationInterpolator","PositionInterpolator","ScalarInterpolator","Background","Fog","NavigationInfo","Viewpoint","Text"].join("|")),longer_alt:n}),a=e({name:"DEF",pattern:/DEF/,longer_alt:n}),s=e({name:"USE",pattern:/USE/,longer_alt:n}),i=e({name:"ROUTE",pattern:/ROUTE/,longer_alt:n}),l=e({name:"TO",pattern:/TO/,longer_alt:n}),c=e({name:"StringLiteral",pattern:/"(?:[^\\"\n\r]|\\[bfnrtv"\\/]|\\u[0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F])*"/}),u=e({name:"HexLiteral",pattern:/0[xX][0-9a-fA-F]+/}),f=e({name:"NumberLiteral",pattern:/[-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?/}),E=e({name:"TrueLiteral",pattern:/TRUE/}),d=e({name:"FalseLiteral",pattern:/FALSE/}),p=e({name:"NullLiteral",pattern:/NULL/}),h=e({name:"LSquare",pattern:/\[/}),b=e({name:"RSquare",pattern:/]/}),T=e({name:"LCurly",pattern:/{/}),R=e({name:"RCurly",pattern:/}/}),x=e({name:"Comment",pattern:/#.*/,group:chevrotain.Lexer.SKIPPED}),m=[e({name:"WhiteSpace",pattern:/[ ,\s]/,group:chevrotain.Lexer.SKIPPED}),o,a,s,i,l,E,d,p,r,n,t,c,u,f,h,b,T,R,x],g={};for(let e=0,t=m.length;e<t;e++){const t=m[e];g[t.name]=t}return{tokens:m,tokenVocabulary:g}}(),o=new t(n.tokens),a=new r(n.tokenVocabulary),s=function(e){function t(){e.call(this),this.validateVisitor()}function n(e,t){const n={type:null,values:[]};if(t.node){n.type="node";for(let r=0,o=t.node.length;r<o;r++){const o=t.node[r];n.values.push(e.visit(o))}}if(t.use){n.type="use";for(let r=0,o=t.use.length;r<o;r++){const o=t.use[r];n.values.push(e.visit(o))}}if(t.StringLiteral){n.type="string";for(let e=0,r=t.StringLiteral.length;e<r;e++){const r=t.StringLiteral[e];n.values.push(r.image.replace(/'|"/g,""))}}if(t.NumberLiteral){n.type="number";for(let e=0,r=t.NumberLiteral.length;e<r;e++){const r=t.NumberLiteral[e];n.values.push(parseFloat(r.image))}}if(t.HexLiteral){n.type="hex";for(let e=0,r=t.HexLiteral.length;e<r;e++){const r=t.HexLiteral[e];n.values.push(r.image)}}if(t.TrueLiteral){n.type="boolean";for(let e=0,r=t.TrueLiteral.length;e<r;e++)"TRUE"===t.TrueLiteral[e].image&&n.values.push(!0)}if(t.FalseLiteral){n.type="boolean";for(let e=0,r=t.FalseLiteral.length;e<r;e++)"FALSE"===t.FalseLiteral[e].image&&n.values.push(!1)}return t.NullLiteral&&(n.type="null",t.NullLiteral.forEach((function(){n.values.push(null)}))),n}return t.prototype=Object.assign(Object.create(e.prototype),{constructor:t,vrml:function(e){const t={version:this.visit(e.version),nodes:[],routes:[]};for(let n=0,r=e.node.length;n<r;n++){const r=e.node[n];t.nodes.push(this.visit(r))}if(e.route)for(let n=0,r=e.route.length;n<r;n++){const r=e.route[n];t.routes.push(this.visit(r))}return t},version:function(e){return e.Version[0].image},node:function(e){const t={name:e.NodeName[0].image,fields:[]};if(e.field)for(let n=0,r=e.field.length;n<r;n++){const r=e.field[n];t.fields.push(this.visit(r))}return e.def&&(t.DEF=this.visit(e.def[0])),t},field:function(e){const t={name:e.Identifier[0].image,type:null,values:null};let n;return e.singleFieldValue&&(n=this.visit(e.singleFieldValue[0])),e.multiFieldValue&&(n=this.visit(e.multiFieldValue[0])),t.type=n.type,t.values=n.values,t},def:function(e){return(e.Identifier||e.NodeName)[0].image},use:function(e){return{USE:(e.Identifier||e.NodeName)[0].image}},singleFieldValue:function(e){return n(this,e)},multiFieldValue:function(e){return n(this,e)},route:function(e){return{FROM:e.RouteIdentifier[0].image,TO:e.RouteIdentifier[1].image}}}),new t}(a.getBaseCstVisitorConstructor()),i=o.lex(e);a.input=i.tokens;const l=a.vrml();if(a.errors.length>0)throw console.error(a.errors),Error("THREE.VRMLLoader: Parsing errors detected.");return s.visit(l)}(e),N=function(e){const t=e.nodes,n=new THREE.Scene;for(let e=0,n=t.length;e<n;e++)i(t[e]);for(let e=0,r=t.length;e<r;e++){const r=t[e],o=l(r);o instanceof THREE.Object3D&&n.add(o),"WorldInfo"===r.name&&(n.userData.worldInfo=o)}return n}(I);return N}}class t{constructor(e){this.lexer=new chevrotain.Lexer(e)}lex(e){const t=this.lexer.tokenize(e);if(t.errors.length>0)throw console.error(t.errors),Error("THREE.VRMLLexer: Lexing errors detected.");return t}}const n=chevrotain.CstParser;class r extends n{constructor(e){super(e);const t=this,n=e.Version,r=e.LCurly,o=e.RCurly,a=e.LSquare,s=e.RSquare,i=e.Identifier,l=e.RouteIdentifier,c=e.StringLiteral,u=e.HexLiteral,f=e.NumberLiteral,E=e.TrueLiteral,d=e.FalseLiteral,p=e.NullLiteral,h=e.DEF,b=e.USE,T=e.ROUTE,R=e.TO,x=e.NodeName;t.RULE("vrml",(function(){t.SUBRULE(t.version),t.AT_LEAST_ONE((function(){t.SUBRULE(t.node)})),t.MANY((function(){t.SUBRULE(t.route)}))})),t.RULE("version",(function(){t.CONSUME(n)})),t.RULE("node",(function(){t.OPTION((function(){t.SUBRULE(t.def)})),t.CONSUME(x),t.CONSUME(r),t.MANY((function(){t.SUBRULE(t.field)})),t.CONSUME(o)})),t.RULE("field",(function(){t.CONSUME(i),t.OR2([{ALT:function(){t.SUBRULE(t.singleFieldValue)}},{ALT:function(){t.SUBRULE(t.multiFieldValue)}}])})),t.RULE("def",(function(){t.CONSUME(h),t.OR([{ALT:function(){t.CONSUME(i)}},{ALT:function(){t.CONSUME(x)}}])})),t.RULE("use",(function(){t.CONSUME(b),t.OR([{ALT:function(){t.CONSUME(i)}},{ALT:function(){t.CONSUME(x)}}])})),t.RULE("singleFieldValue",(function(){t.AT_LEAST_ONE((function(){t.OR([{ALT:function(){t.SUBRULE(t.node)}},{ALT:function(){t.SUBRULE(t.use)}},{ALT:function(){t.CONSUME(c)}},{ALT:function(){t.CONSUME(u)}},{ALT:function(){t.CONSUME(f)}},{ALT:function(){t.CONSUME(E)}},{ALT:function(){t.CONSUME(d)}},{ALT:function(){t.CONSUME(p)}}])}))})),t.RULE("multiFieldValue",(function(){t.CONSUME(a),t.MANY((function(){t.OR([{ALT:function(){t.SUBRULE(t.node)}},{ALT:function(){t.SUBRULE(t.use)}},{ALT:function(){t.CONSUME(c)}},{ALT:function(){t.CONSUME(u)}},{ALT:function(){t.CONSUME(f)}},{ALT:function(){t.CONSUME(p)}}])})),t.CONSUME(s)})),t.RULE("route",(function(){t.CONSUME(T),t.CONSUME(l),t.CONSUME(R),t.CONSUME2(l)})),this.performSelfAnalysis()}}class o{constructor(e,t,n){this.a=e,this.b=t,this.c=n,this.normal=new THREE.Vector3}}const a={INTENSITY:1,INTENSITY_ALPHA:2,RGB:3,RGBA:4};THREE.VRMLLoader=e}();